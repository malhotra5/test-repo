name: Resolve Issue with OpenHands

on:
  issues:
    types: [labeled]
  pull_request:
    types: [labeled]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  setup-and-resolve:
    if: |
      github.event.label.name == 'fix-me' ||

      (
        ((github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment') &&
         (startsWith(github.event.comment.body, inputs.macro || '@openhands-agent') || startsWith(github.event.comment.body, inputs.macro || vars.OPENHANDS_MACRO)) &&
        (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR' || github.event.comment.author_association == 'MEMBER')
        ) ||

        (github.event_name == 'pull_request_review' &&
        (startsWith(github.event.review.body, inputs.macro || '@openhands-agent') || startsWith(github.event.review.body, inputs.macro || vars.OPENHANDS_MACRO)) &&
        (github.event.review.author_association == 'OWNER' || github.event.review.author_association == 'COLLABORATOR' || github.event.review.author_association == 'MEMBER')
        )
      )
    runs-on: ubuntu-latest
    outputs:
      OPENHANDS_ENV: ${{ steps.step1.outputs.openhands_env }}
    steps:
      - id: step1
        env:
          ENV_SECRETS: "${{ toJSON(secrets) }}"
          PASSPHRASE: ${{ secrets.OPENHANDS_PASSPHRASE }}
        run: |
          # Extract stringified JSON and filter keys starting with OPENHANDS_
          secrets=$(echo "$ENV_SECRETS" | jq 'with_entries(select(.key | startswith("OPENHANDS_ENV_")))')
          sanitized_secrets=$(echo "$secrets" | jq -c .) 
          # openhands_env=$(echo $sanitized_secrets | gpg --batch --yes --passphrase "$PASSPHRASE" --symmetric --cipher-algo AES256 | base64 --wrap 0)
          # echo "openhands_env=$openhands_env" >> "$GITHUB_OUTPUT"
          echo "::add-mask::$sanitized_secrets"
          echo "openhands_env=$sanitized_secrets" >> "$GITHUB_OUTPUT"

  log-test:
    needs: setup-and-resolve
    runs-on: ubuntu-latest
    steps:
      - id: lop
        env:
          SECRETS: ${{ needs.setup-and-resolve.outputs.OPENHANDS_ENV }}
        run: |
          echo "$SECRETS"

  call-resolver:
    needs: setup-and-resolve
    uses: malhotra5/OpenHands/.github/workflows/openhands-resolver.yml@resolver/env-support
    with:
      macro: ${{ vars.OPENHANDS_MACRO || '@openhands-agent' }}
      max_iterations: ${{ vars.OPENHANDS_MAX_ITER || 50 }}
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      PAT_USERNAME: ${{ secrets.PAT_USERNAME }}
      LLM_MODEL: ${{ secrets.LLM_MODEL }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}
      PASSPHRASE: ${{ secrets.OPENHANDS_PASSPHRASE}}
      ENV_CONFIG: ${{ needs.setup-and-resolve.outputs.OPENHANDS_ENV }}
